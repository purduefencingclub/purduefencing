{"ast":null,"code":"import axios from\"axios\";import setAuthToken from\"../utils/setAuthToken\";import jwt_decode from\"jwt-decode\";import{GET_ERRORS,SET_CURRENT_USER,USER_LOADING}from\"./types\";// Register User\n// export const registerUser = (userData, history) => (dispatch) => {\n//   axios\n//     .post(\"/api/users/register\", userData)\n//     .then((res) => history.push(\"/admin\")) // re-direct to login on successful register\n//     .catch((err) =>\n//       dispatch({\n//         type: GET_ERRORS,\n//         payload: err.response.data,\n//       })\n//     );\n// };\n// Login - get user token\nexport var loginUser=function loginUser(userData){return function(dispatch){axios.post(\"https://157.230.80.32:2718/api/users/login\",userData).then(function(res){// Save to localStorage\n// Set token to localStorage\nvar token=res.data.token;localStorage.setItem(\"jwtToken\",token);// Set token to Auth header\nsetAuthToken(token);// Decode token to get user data\nvar decoded=jwt_decode(token);// Set current user\ndispatch(setCurrentUser(decoded));}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Set logged in user\nexport var setCurrentUser=function setCurrentUser(decoded){return{type:SET_CURRENT_USER,payload:decoded};};// User loading\nexport var setUserLoading=function setUserLoading(){return{type:USER_LOADING};};// Log user out\nexport var logoutUser=function logoutUser(){return function(dispatch){// Remove token from local storage\nlocalStorage.removeItem(\"jwtToken\");// Remove auth header for future requests\nsetAuthToken(false);// Set current user to empty object {} which will set isAuthenticated to false\ndispatch(setCurrentUser({}));};};","map":{"version":3,"sources":["/home/fencingadmin/purduefencing/purduefencing/Client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","loginUser","userData","dispatch","post","then","res","token","data","localStorage","setItem","decoded","setCurrentUser","catch","err","type","payload","response","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,UAAT,CAAqBC,gBAArB,CAAuCC,YAAvC,KAA2D,SAA3D,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,QAAc,UAACC,QAAD,CAAc,CACnDR,KAAK,CACFS,IADH,CACQ,4CADR,CACsDF,QADtD,EAEGG,IAFH,CAEQ,SAACC,GAAD,CAAS,CACb;AACA;AACA,GAAQC,CAAAA,KAAR,CAAkBD,GAAG,CAACE,IAAtB,CAAQD,KAAR,CACAE,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCH,KAAjC,EACA;AACAX,YAAY,CAACW,KAAD,CAAZ,CACA;AACA,GAAMI,CAAAA,OAAO,CAAGd,UAAU,CAACU,KAAD,CAA1B,CACA;AACAJ,QAAQ,CAACS,cAAc,CAACD,OAAD,CAAf,CAAR,CACD,CAbH,EAcGE,KAdH,CAcS,SAACC,GAAD,QACLX,CAAAA,QAAQ,CAAC,CACPY,IAAI,CAAEjB,UADC,CAEPkB,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaT,IAFf,CAAD,CADH,EAdT,EAoBD,CArBwB,EAAlB,CAsBP;AACA,MAAO,IAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACD,OAAD,CAAa,CACzC,MAAO,CACLI,IAAI,CAAEhB,gBADD,CAELiB,OAAO,CAAEL,OAFJ,CAAP,CAID,CALM,CAMP;AACA,MAAO,IAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAO,CACLH,IAAI,CAAEf,YADD,CAAP,CAGD,CAJM,CAKP;AACA,MAAO,IAAMmB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAM,UAAChB,QAAD,CAAc,CAC5C;AACAM,YAAY,CAACW,UAAb,CAAwB,UAAxB,EACA;AACAxB,YAAY,CAAC,KAAD,CAAZ,CACA;AACAO,QAAQ,CAACS,cAAc,CAAC,EAAD,CAAf,CAAR,CACD,CAPyB,EAAnB","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n// Register User\n\n// export const registerUser = (userData, history) => (dispatch) => {\n//   axios\n//     .post(\"/api/users/register\", userData)\n//     .then((res) => history.push(\"/admin\")) // re-direct to login on successful register\n//     .catch((err) =>\n//       dispatch({\n//         type: GET_ERRORS,\n//         payload: err.response.data,\n//       })\n//     );\n// };\n// Login - get user token\n\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(\"https://157.230.80.32:2718/api/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}