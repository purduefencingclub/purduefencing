{"ast":null,"code":"var _jsxFileName = \"/Users/turtle/purduefencingclub/express-app/Client/src/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../actions/authActions\";\nimport { Container, Row, Col, Carousel, Button, Form } from \"react-bootstrap\";\nimport Fade from \"react-reveal\";\nimport image1 from \"../image1.jpeg\";\nimport Footer from \"../components/Footer\";\nimport Navigation from \"../components/Navigation\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar token = localStorage.getItem(\"jwtToken\").split(\" \")[1];\n\nconst Dashboard = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const onLogoutClick = e => {\n    const {\n      user\n    } = this.props.auth;\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  const handleSubmit = e => {\n    console.log(token);\n    e.preventDefault();\n    axios.post(\"/api/posts/create\", {\n      title,\n      body\n    }, {\n      headers: {\n        \"x-auth-token\": `${token}`\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  }; //const { user } = this.props.auth;\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-nav\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-text\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"heading-about\",\n              children: \"WELCOME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"fencing-body\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"username\",\n              onChange: e => setTitle(e.target.value) // error={errors.email}\n              // id=\"email\"\n              // type=\"email\"\n              // className={classnames(\"\", {\n              //   invalid: errors.email || errors.emailnotfound,\n              // })}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"body\",\n              onChange: e => setBody(e.target.value) //value={this.state.body}\n              // error={errors.password}\n              // id=\"password\"\n              // type=\"password\"\n              // className={classnames(\"\", {\n              //   invalid: errors.password || errors.passwordincorrect,\n              // })}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          onClick: onLogoutClick,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"6HXhu2MyhlZpOMFDXlcyR7kq/h8=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/turtle/purduefencingclub/express-app/Client/src/dashboard/Dashboard.js"],"names":["React","Component","useState","PropTypes","connect","logoutUser","Container","Row","Col","Carousel","Button","Form","Fade","image1","Footer","Navigation","axios","token","localStorage","getItem","split","Dashboard","title","setTitle","body","setBody","onLogoutClick","e","user","props","auth","preventDefault","handleSubmit","console","log","post","headers","then","res","target","value","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../actions/authActions\";\nimport { Container, Row, Col, Carousel, Button, Form } from \"react-bootstrap\";\nimport Fade from \"react-reveal\";\nimport image1 from \"../image1.jpeg\";\nimport Footer from \"../components/Footer\";\n\nimport Navigation from \"../components/Navigation\";\nimport axios from \"axios\";\nvar token = localStorage.getItem(\"jwtToken\").split(\" \")[1];\n\nconst Dashboard = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const onLogoutClick = (e) => {\n    const { user } = this.props.auth;\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  const handleSubmit = (e) => {\n    console.log(token);\n    e.preventDefault();\n    axios\n      .post(\n        \"/api/posts/create\",\n        {\n          title,\n          body,\n        },\n        {\n          headers: {\n            \"x-auth-token\": `${token}`,\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n      });\n  };\n\n  //const { user } = this.props.auth;\n\n  return (\n    <>\n      {/* General notes about this page: I don't really like the layout of the first section. It could\n    definitely be improved. The second section with the \"beliefs\" I think makes a lot of sense to add.\n    I got those words from the consitution of the club. I like the icons too.  */}\n      <div className=\"dashboard-nav\">\n        <Navigation></Navigation>\n        <div className=\"header-text\">\n          <Container>\n            <Row>\n              <p className=\"heading-about\">WELCOME</p>\n            </Row>\n          </Container>\n        </div>\n      </div>\n      <br />\n      <div>\n        <Container className=\"fencing-body\">\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"username\"\n                onChange={(e) => setTitle(e.target.value)}\n                // error={errors.email}\n                // id=\"email\"\n                // type=\"email\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email || errors.emailnotfound,\n                // })}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Body</Form.Label>\n              <Form.Control\n                placeholder=\"body\"\n                onChange={(e) => setBody(e.target.value)}\n                //value={this.state.body}\n                // error={errors.password}\n                // id=\"password\"\n                // type=\"password\"\n                // className={classnames(\"\", {\n                //   invalid: errors.password || errors.passwordincorrect,\n                // })}\n              />\n            </Form.Group>\n            <Button variant=\"dark\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n          <Button variant=\"dark\" type=\"submit\" onClick={onLogoutClick}>\n            Logout\n          </Button>\n        </Container>\n      </div>\n      <Footer></Footer>\n    </>\n  );\n};\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}